openapi: 3.0.0
info:
  description: >-
    This is API of the RADON Continuous Testing Tool (CTT) Server: <a
    href="https://github.com/radon-h2020/radon-ctt">https://github.com/radon-h2020/radon-ctt<a/>
  license:
    name: 'Apache License, Version 2.0'
    url: 'https://opensource.org/licenses/Apache-2.0'
  title: RADON CTT Server API
  version: 1.0.0-oas3
servers:
  - url: /RadonCTT
tags:
  - name: Project
  - name: TestArtifact
  - name: Deployment
  - name: Execution
  - name: Result
  - name: Workflow
paths:
  /workflow:
    post:
      operationId: create_workflow
      requestBody:
        content:
          application/octet-stream:
            # any media type is accepted, functionally equivalent to `*/*`
            schema:
              # a binary file of any type
              type: string
              format: base64
      # requestBody:
      #   $ref: '#/components/requestBodies/POSTWorkflow'
      responses:
        '201':
          description: Successful operation
      summary: Creates a workflow
      tags:
          - Workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
  /deployment:
    get:
      operationId: get_deployments
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Deployment'
                type: array
                x-content-type: application/json
          description: Success
      summary: Get all deployments
      tags:
        - Deployment
      x-openapi-router-controller: openapi_server.controllers.deployment_controller
    post:
      operationId: create_deployment
      requestBody:
        $ref: '#/components/requestBodies/POSTDeployment'
      responses:
        '201':
          description: Successful operation
      summary: Creates a deployment
      tags:
        - Deployment
      x-openapi-router-controller: openapi_server.controllers.deployment_controller
  '/deployment/{deployment_uuid}':
    delete:
      description: >-
        Deletes the test artifact with the given UUID and all elements depending
        on it
      operationId: delete_deployment_by_uuid
      parameters:
        - description: UUID of the deployment to delete
          explode: false
          in: path
          name: deployment_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Successful deletion of the deployment
      summary: Delete a deployment
      tags:
        - Deployment
      x-openapi-router-controller: openapi_server.controllers.deployment_controller
    get:
      operationId: get_deployment_by_uuid
      parameters:
        - description: UUID of the deployment to return
          explode: false
          in: path
          name: deployment_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Success
      summary: Retrieve a deployment
      tags:
        - Deployment
      x-openapi-router-controller: openapi_server.controllers.deployment_controller
  /execution:
    get:
      operationId: get_executions
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Execution'
                type: array
                x-content-type: application/json
          description: Success
      summary: Get all executions
      tags:
        - Execution
      x-openapi-router-controller: openapi_server.controllers.execution_controller
    post:
      operationId: create_execution
      requestBody:
        $ref: '#/components/requestBodies/POSTExecution'
      responses:
        '201':
          description: Success
      summary: Creates an execution
      tags:
        - Execution
      x-openapi-router-controller: openapi_server.controllers.execution_controller
  '/execution/{execution_uuid}':
    delete:
      description: >-
        Deletes the execution with the given UUID and all elements depending on
        it
      operationId: delete_execution_by_uuid
      parameters:
        - description: UUID of the execution to delete
          explode: false
          in: path
          name: execution_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: Successful deletion of the execution
      summary: Delete an execution
      tags:
        - Execution
      x-openapi-router-controller: openapi_server.controllers.execution_controller
    get:
      operationId: get_execution_by_uuid
      parameters:
        - description: UUID of the execution to return
          explode: false
          in: path
          name: execution_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: Success
      summary: Retrieve an execution
      tags:
        - Execution
      x-openapi-router-controller: openapi_server.controllers.execution_controller
  /project:
    get:
      operationId: get_projects
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
                x-content-type: application/json
          description: Success
      summary: Get a list of all projects
      tags:
        - Project
      x-openapi-router-controller: openapi_server.controllers.project_controller
    post:
      operationId: create_project
      requestBody:
        $ref: '#/components/requestBodies/POSTProject'
      responses:
        '201':
          description: Success
      summary: Creates a project
      tags:
        - Project
      x-openapi-router-controller: openapi_server.controllers.project_controller
  '/project/{project_uuid}':
    delete:
      operationId: delete_project
      parameters:
        - description: UUID of the project to delete
          explode: false
          in: path
          name: project_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: Success
      summary: Delete a project
      tags:
        - Project
      x-openapi-router-controller: openapi_server.controllers.project_controller
    get:
      operationId: get_project_by_uuid
      parameters:
        - description: UUID of the project to return
          explode: false
          in: path
          name: project_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
      summary: Retrieve a project
      tags:
        - Project
      x-openapi-router-controller: openapi_server.controllers.project_controller
  /result:
    get:
      operationId: get_results
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Result'
                type: array
                x-content-type: application/json
          description: Success
      summary: Get all results
      tags:
        - Result
      x-openapi-router-controller: openapi_server.controllers.result_controller
    post:
      summary: Creates new result
      description: Creates a new result based on a previously run execution.
      operationId: create_result
      requestBody:
        $ref: '#/components/requestBodies/POSTResult'
      responses:
        '201':
          description: Success
      tags:
        - Result
      x-openapi-router-controller: openapi_server.controllers.result_controller
  '/result/{result_uuid}':
    delete:
      description: Deletes the result with the given UUID on it
      operationId: delete_result_by_uuid
      parameters:
        - description: UUID of the result to delete
          explode: false
          in: path
          name: result_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Successful deletion of the result
      summary: Delete a result
      tags:
        - Result
      x-openapi-router-controller: openapi_server.controllers.result_controller
    get:
      operationId: get_result_by_uuid
      parameters:
        - description: UUID of the result to return
          explode: false
          in: path
          name: result_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Success
      summary: Retrieve a result
      tags:
        - Result
      x-openapi-router-controller: openapi_server.controllers.result_controller
  '/result/{result_uuid}/download':
    get:
      operationId: download_result_by_uuid
      parameters:
        - description: UUID of the result to download
          explode: false
          in: path
          name: result_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                format: binary
                type: string
                x-content-type: application/json
          description: Success
      summary: Downloads the generated results
      tags:
        - Result
      x-openapi-router-controller: openapi_server.controllers.result_controller
  /testartifact:
    get:
      operationId: get_testartifacts
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TestArtifact'
                type: array
                x-content-type: application/json
          description: Success
      summary: Get all test artifacts
      tags:
        - TestArtifact
      x-openapi-router-controller: openapi_server.controllers.test_artifact_controller
    post:
      operationId: create_testartifact
      requestBody:
        $ref: '#/components/requestBodies/POSTTestArtifact'
      responses:
        '201':
          description: Success
      summary: Creates a test artifact
      tags:
        - TestArtifact
      x-openapi-router-controller: openapi_server.controllers.test_artifact_controller
  '/testartifact/{testartifact_uuid}':
    delete:
      description: >-
        Deletes the test artifact with the given UUID and all elements depending
        on it
      operationId: delete_testartifact_by_uuid
      parameters:
        - description: UUID of the test artifact to delete
          explode: false
          in: path
          name: testartifact_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestArtifact'
          description: Successful deletion of the test artifact
      summary: Delete a test artifact
      tags:
        - TestArtifact
      x-openapi-router-controller: openapi_server.controllers.test_artifact_controller
    get:
      operationId: get_testartifact_by_uuid
      parameters:
        - description: UUID of the test artifact to return
          explode: false
          in: path
          name: testartifact_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestArtifact'
          description: Success
      summary: Retrieve a test artifact
      tags:
        - TestArtifact
      x-openapi-router-controller: openapi_server.controllers.test_artifact_controller
  '/testartifact/{testartifact_uuid}/download':
    get:
      operationId: download_testartifact_by_uuid
      parameters:
        - description: UUID of the test artifact to download
          explode: false
          in: path
          name: testartifact_uuid
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                format: binary
                type: string
                x-content-type: application/json
          description: Success
      summary: Downloads the generated test artifact
      tags:
        - TestArtifact
      x-openapi-router-controller: openapi_server.controllers.test_artifact_controller
components:
  requestBodies:
    POSTProject:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTProject'
    POSTTestArtifact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTestArtifact'
    POSTDeployment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTDeployment'
    POSTExecution:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTExecution'
    POSTResult:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTResult'
    POSTWorkflow:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTWorkflow'
  schemas:
    Project:
      example:
        uuid: ac9431bd-1a1c-4d6f-a98f-cc97401b5e47
        name: SockShop
        repository_url: 'https://github.com/radon-h2020/demo-ctt-sockshop.git'
      properties:
        uuid:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        repository_url:
          readOnly: true
          type: string
      type: object
    TestArtifact:
      example:
        uuid: 0036bd60-1ac0-44db-9578-0181792e2ac1
        project_uuid: ac9431bd-1a1c-4d6f-a98f-cc97401b5e47
        sut_tosca_path: radon-ctt/sut.csar
        sut_inputs_path: radon-ctt/sut-inputs.yaml
        ti_tosca_path: radon-ctt/ti.csar
        ti_inputs_path: radon-ctt/ti-inputs.yaml
        commit_hash: 667d69cc5b0527d0c3d0887cd175114e9310d518
      properties:
        uuid:
          readOnly: true
          type: string
        project_uuid:
          readOnly: true
          type: string
        sut_tosca_path:
          readOnly: true
          type: string
        sut_inputs_path:
          readOnly: true
          type: string
        ti_tosca_path:
          readOnly: true
          type: string
        ti_inputs_path:
          readOnly: true
          type: string
        commit_hash:
          readOnly: true
          type: string
      type: object
    Deployment:
      example:
        uuid: 1f89586a-8fd8-4766-baed-28b615809b14
        testartifact_uuid: 0036bd60-1ac0-44db-9578-0181792e2ac1
      properties:
        uuid:
          readOnly: true
          type: string
        testartifact_uuid:
          readOnly: true
          type: string
      type: object
    Execution:
      example:
        uuid: 03a2d4ff-e0c9-4312-a4ee-53a6ac060e6e
        deployment_uuid: 1f89586a-8fd8-4766-baed-28b615809b14
      properties:
        uuid:
          readOnly: true
          type: string
        deployment_uuid:
          readOnly: true
          type: string
      type: object
    Result:
      example:
        uuid: 6ce56e02-aa45-4a57-b097-f6c63564f2e3
        execution_uuid: 03a2d4ff-e0c9-4312-a4ee-53a6ac060e6e
      properties:
        uuid:
          readOnly: true
          type: string
        execution_uuid:
          readOnly: true
          type: string
      type: object
    Workflow:
      properties:
        workflow_data:
          readOnly: true
          type: string
      type: object
    POSTProject:
      example:
        name: SockShop
        repository_url: 'https://github.com/radon-h2020/demo-ctt-sockshop.git'
      properties:
        name:
          example: SockShop
          type: string
        repository_url:
          example: 'https://github.com/radon-h2020/demo-ctt-sockshop.git'
          type: string
      required:
        - name
        - repository_url
      type: object
    POSTTestArtifact:
      example:
        project_uuid: ac9431bd-1a1c-4d6f-a98f-cc97401b5e47
        sut_tosca_path: radon-ctt/sut.csar
        sut_inputs_path: radon-ctt/sut-inputs.yaml
        ti_tosca_path: radon-ctt/ti.csar
        ti_inputs_path: radon-ctt/ti-inputs.yaml
      properties:
        project_uuid:
          example: ac9431bd-1a1c-4d6f-a98f-cc97401b5e47
          type: string
        sut_tosca_path:
          example: radon-ctt/sut.csar
          type: string
        ti_tosca_path:
          example: radon-ctt/ti.csar
          type: string
        sut_inputs_path:
          example: radon-ctt/sut-inputs.yaml
          type: string
        ti_inputs_path:
          example: radon-ctt/ti-inputs.yaml
          type: string
      required:
        - project_uuid
        - sut_tosca_path
        - ti_tosca_path
      type: object
    POSTDeployment:
      example:
        testartifact_uuid: 0036bd60-1ac0-44db-9578-0181792e2ac1
      properties:
        testartifact_uuid:
          example: 0036bd60-1ac0-44db-9578-0181792e2ac1
          type: string
      required:
        - testartifact_uuid
      type: object
    POSTExecution:
      example:
        deployment_uuid: 1f89586a-8fd8-4766-baed-28b615809b14
      properties:
        deployment_uuid:
          example: 1f89586a-8fd8-4766-baed-28b615809b14
          type: string
      required:
        - deployment_uuid
      type: object
    POSTResult:
      example:
        execution_uuid: 0036bd65-1ac0-44cb-9573-0191792e2aa1
      properties:
        execution_uuid:
          example: 0036bd65-1ac0-44cb-9573-0191792e2aa1
          type: string
      required:
        - execution_uuid
      type: object
    POSTWorkflow:
      properties:
        workflow_data:
          type: string
      required:
        - workflow_data
